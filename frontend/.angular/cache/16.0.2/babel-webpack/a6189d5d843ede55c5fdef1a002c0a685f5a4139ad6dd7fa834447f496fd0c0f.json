{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass LoadingService {\n  constructor() {\n    this.isLoadingSubject = new BehaviorSubject(false);\n  }\n  showLoading() {\n    this.isLoadingSubject.next(true);\n  }\n  hideLoading() {\n    this.isLoadingSubject.next(false);\n  }\n  get isLoading() {\n    return this.isLoadingSubject.asObservable();\n  }\n}\nLoadingService.ɵfac = function LoadingService_Factory(t) {\n  return new (t || LoadingService)();\n};\nLoadingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadingService,\n  factory: LoadingService.ɵfac,\n  providedIn: 'root'\n});\nexport { LoadingService };","map":{"version":3,"names":["BehaviorSubject","LoadingService","constructor","isLoadingSubject","showLoading","next","hideLoading","isLoading","asObservable","factory","ɵfac","providedIn"],"sources":["D:\\projects\\shoe-selling-site\\frontend\\src\\app\\services\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private isLoadingSubject = new BehaviorSubject<boolean>(false);\n  constructor() { }\n\n  showLoading(){\n    this.isLoadingSubject.next(true);\n  }\n\n  hideLoading(){\n    this.isLoadingSubject.next(false);\n  }\n\n  get isLoading(){\n    return this.isLoadingSubject.asObservable();\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAEtC,MAGaC,cAAc;EAEzBC,YAAA;IADQ,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EAC9C;EAEhBI,WAAWA,CAAA;IACT,IAAI,CAACD,gBAAgB,CAACE,IAAI,CAAC,IAAI,CAAC;EAClC;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAAC,KAAK,CAAC;EACnC;EAEA,IAAIE,SAASA,CAAA;IACX,OAAO,IAAI,CAACJ,gBAAgB,CAACK,YAAY,EAAE;EAC7C;;;mBAdWP,cAAc;AAAA;;SAAdA,cAAc;EAAAQ,OAAA,EAAdR,cAAc,CAAAS,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}