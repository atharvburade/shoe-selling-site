{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { USER_LOGIN_URL, USER_REGISTER_URL } from '../shared/constants/urls';\nimport { User } from '../shared/models/User';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nconst USER_KEY = 'User';\nclass UserService {\n  constructor(http, toastrService) {\n    this.http = http;\n    this.toastrService = toastrService;\n    this.userSubject = new BehaviorSubject(this.getUserFromLocalStorage());\n    this.userObservable = this.userSubject.asObservable();\n  }\n  get currentUser() {\n    return this.userSubject.value;\n  }\n  login(userLogin) {\n    return this.http.post(USER_LOGIN_URL, userLogin).pipe(tap({\n      next: user => {\n        this.setUserToLocalStorage(user);\n        this.userSubject.next(user);\n        this.toastrService.success(`Welcome to shoemine ${user.name}!`, 'Login Successful');\n      },\n      error: errorResponse => {\n        this.toastrService.error(errorResponse.error, 'Login Failed');\n      }\n    }));\n  }\n  register(userRegiser) {\n    return this.http.post(USER_REGISTER_URL, userRegiser).pipe(tap({\n      next: user => {\n        this.setUserToLocalStorage(user);\n        this.userSubject.next(user);\n        this.toastrService.success(`Welcome to the shoemine ${user.name}`, 'Register Successful');\n      },\n      error: errorResponse => {\n        this.toastrService.error(errorResponse.error, 'Register Failed');\n      }\n    }));\n  }\n  logout() {\n    this.userSubject.next(new User());\n    localStorage.removeItem(USER_KEY);\n    window.location.reload();\n  }\n  setUserToLocalStorage(user) {\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  getUserFromLocalStorage() {\n    const userJson = localStorage.getItem(USER_KEY);\n    if (userJson) return JSON.parse(userJson);\n    return new User();\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["BehaviorSubject","tap","USER_LOGIN_URL","USER_REGISTER_URL","User","USER_KEY","UserService","constructor","http","toastrService","userSubject","getUserFromLocalStorage","userObservable","asObservable","currentUser","value","login","userLogin","post","pipe","next","user","setUserToLocalStorage","success","name","error","errorResponse","register","userRegiser","logout","localStorage","removeItem","window","location","reload","setItem","JSON","stringify","userJson","getItem","parse","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","factory","ɵfac","providedIn"],"sources":["D:\\projects\\shoe-selling-site\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { USER_LOGIN_URL, USER_REGISTER_URL } from '../shared/constants/urls';\nimport { IUserLogin } from '../shared/interfaces/IUserLogin';\nimport { IUserRegister } from '../shared/interfaces/IUserRegister';\nimport { User } from '../shared/models/User';\n\nconst USER_KEY = 'User';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userSubject =\n  new BehaviorSubject<User>(this.getUserFromLocalStorage());\n  public userObservable:Observable<User>;\n  constructor(private http:HttpClient, private toastrService:ToastrService) {\n    this.userObservable = this.userSubject.asObservable();\n  }\n\n  public get currentUser():User{\n    return this.userSubject.value;\n  }\n\n  login(userLogin:IUserLogin):Observable<User>{\n    return this.http.post<User>(USER_LOGIN_URL, userLogin).pipe(\n      tap({\n        next: (user) =>{\n          this.setUserToLocalStorage(user);\n          this.userSubject.next(user);\n          this.toastrService.success(\n            `Welcome to shoemine ${user.name}!`,\n            'Login Successful'\n          )\n        },\n        error: (errorResponse) => {\n          this.toastrService.error(errorResponse.error, 'Login Failed');\n        }\n      })\n    );\n  }\n\n  register(userRegiser:IUserRegister): Observable<User>{\n    return this.http.post<User>(USER_REGISTER_URL, userRegiser).pipe(\n      tap({\n        next: (user) => {\n          this.setUserToLocalStorage(user);\n          this.userSubject.next(user);\n          this.toastrService.success(\n            `Welcome to the shoemine ${user.name}`,\n            'Register Successful'\n          )\n        },\n        error: (errorResponse) => {\n          this.toastrService.error(errorResponse.error,\n            'Register Failed')\n        }\n      })\n    )\n  }\n\n\n  logout(){\n    this.userSubject.next(new User());\n    localStorage.removeItem(USER_KEY);\n    window.location.reload();\n  }\n\n  private setUserToLocalStorage(user:User){\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  private getUserFromLocalStorage():User{\n    const userJson = localStorage.getItem(USER_KEY);\n    if(userJson) return JSON.parse(userJson) as User;\n    return new User();\n  }\n}\n"],"mappings":"AAGA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,0BAA0B;AAG5E,SAASC,IAAI,QAAQ,uBAAuB;;;;AAE5C,MAAMC,QAAQ,GAAG,MAAM;AACvB,MAGaC,WAAW;EAItBC,YAAoBC,IAAe,EAAUC,aAA2B;IAApD,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,aAAa,GAAbA,aAAa;IAHlD,KAAAC,WAAW,GACnB,IAAIV,eAAe,CAAO,IAAI,CAACW,uBAAuB,EAAE,CAAC;IAGvD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE;EACvD;EAEA,IAAWC,WAAWA,CAAA;IACpB,OAAO,IAAI,CAACJ,WAAW,CAACK,KAAK;EAC/B;EAEAC,KAAKA,CAACC,SAAoB;IACxB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAOhB,cAAc,EAAEe,SAAS,CAAC,CAACE,IAAI,CACzDlB,GAAG,CAAC;MACFmB,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,qBAAqB,CAACD,IAAI,CAAC;QAChC,IAAI,CAACX,WAAW,CAACU,IAAI,CAACC,IAAI,CAAC;QAC3B,IAAI,CAACZ,aAAa,CAACc,OAAO,CACxB,uBAAuBF,IAAI,CAACG,IAAI,GAAG,EACnC,kBAAkB,CACnB;MACH,CAAC;MACDC,KAAK,EAAGC,aAAa,IAAI;QACvB,IAAI,CAACjB,aAAa,CAACgB,KAAK,CAACC,aAAa,CAACD,KAAK,EAAE,cAAc,CAAC;MAC/D;KACD,CAAC,CACH;EACH;EAEAE,QAAQA,CAACC,WAAyB;IAChC,OAAO,IAAI,CAACpB,IAAI,CAACU,IAAI,CAAOf,iBAAiB,EAAEyB,WAAW,CAAC,CAACT,IAAI,CAC9DlB,GAAG,CAAC;MACFmB,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,qBAAqB,CAACD,IAAI,CAAC;QAChC,IAAI,CAACX,WAAW,CAACU,IAAI,CAACC,IAAI,CAAC;QAC3B,IAAI,CAACZ,aAAa,CAACc,OAAO,CACxB,2BAA2BF,IAAI,CAACG,IAAI,EAAE,EACtC,qBAAqB,CACtB;MACH,CAAC;MACDC,KAAK,EAAGC,aAAa,IAAI;QACvB,IAAI,CAACjB,aAAa,CAACgB,KAAK,CAACC,aAAa,CAACD,KAAK,EAC1C,iBAAiB,CAAC;MACtB;KACD,CAAC,CACH;EACH;EAGAI,MAAMA,CAAA;IACJ,IAAI,CAACnB,WAAW,CAACU,IAAI,CAAC,IAAIhB,IAAI,EAAE,CAAC;IACjC0B,YAAY,CAACC,UAAU,CAAC1B,QAAQ,CAAC;IACjC2B,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;EAEQZ,qBAAqBA,CAACD,IAAS;IACrCS,YAAY,CAACK,OAAO,CAAC9B,QAAQ,EAAE+B,IAAI,CAACC,SAAS,CAAChB,IAAI,CAAC,CAAC;EACtD;EAEQV,uBAAuBA,CAAA;IAC7B,MAAM2B,QAAQ,GAAGR,YAAY,CAACS,OAAO,CAAClC,QAAQ,CAAC;IAC/C,IAAGiC,QAAQ,EAAE,OAAOF,IAAI,CAACI,KAAK,CAACF,QAAQ,CAAS;IAChD,OAAO,IAAIlC,IAAI,EAAE;EACnB;;;mBAhEWE,WAAW,EAAAmC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;SAAXxC,WAAW;EAAAyC,OAAA,EAAXzC,WAAW,CAAA0C,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP3C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}