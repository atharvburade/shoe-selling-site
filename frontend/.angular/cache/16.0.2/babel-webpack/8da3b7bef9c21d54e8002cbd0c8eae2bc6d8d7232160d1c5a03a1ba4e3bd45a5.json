{"ast":null,"code":"import _defineProperty from \"D:/projects/shoe-selling-site/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, Component, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\nconst _c0 = [\"toast-component\", \"\"];\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.remove());\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.remove());\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r7.duplicatesCount + 1, \"]\");\n  }\n}\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r3.message);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.message, \" \");\n  }\n}\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r4.width + \"%\");\n  }\n}\nclass ToastContainerDirective {\n  constructor(el) {\n    _defineProperty(this, \"el\", void 0);\n    this.el = el;\n  }\n  getContainerElement() {\n    return this.el.nativeElement;\n  }\n}\n_defineProperty(ToastContainerDirective, \"\\u0275fac\", function ToastContainerDirective_Factory(t) {\n  return new (t || ToastContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n});\n_defineProperty(ToastContainerDirective, \"\\u0275dir\", /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ToastContainerDirective,\n  selectors: [[\"\", \"toastContainer\", \"\"]],\n  exportAs: [\"toastContainer\"],\n  standalone: true\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[toastContainer]',\n      exportAs: 'toastContainer',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n  constructor(component, injector) {\n    _defineProperty(this, \"_attachedHost\", void 0);\n    /** The type of the component that will be instantiated for attachment. */\n    _defineProperty(this, \"component\", void 0);\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalHost.\n     * The origin necessary when the host is outside of the Angular application context.\n     */\n    _defineProperty(this, \"viewContainerRef\", void 0);\n    /** Injector used for the instantiation of the component. */\n    _defineProperty(this, \"injector\", void 0);\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n  constructor() {\n    /** The portal currently attached to the host. */\n    _defineProperty(this, \"_attachedPortal\", void 0);\n    /** A function that will permanently dispose this host. */\n    _defineProperty(this, \"_disposeFn\", void 0);\n  }\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n  constructor(_overlayRef) {\n    _defineProperty(this, \"_overlayRef\", void 0);\n    /** The instance of component opened into the toast. */\n    _defineProperty(this, \"componentInstance\", void 0);\n    /** Count of duplicates of this toast */\n    _defineProperty(this, \"duplicatesCount\", 0);\n    /** Subject for notifying the user that the toast has finished closing. */\n    _defineProperty(this, \"_afterClosed\", new Subject());\n    /** triggered when toast is activated */\n    _defineProperty(this, \"_activate\", new Subject());\n    /** notifies the toast that it should close before the timeout */\n    _defineProperty(this, \"_manualClose\", new Subject());\n    /** notifies the toast that it should reset the timeouts */\n    _defineProperty(this, \"_resetTimeout\", new Subject());\n    /** notifies the toast that it should count a duplicate toast */\n    _defineProperty(this, \"_countDuplicate\", new Subject());\n    this._overlayRef = _overlayRef;\n  }\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n  close() {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n  isInactive() {\n    return this._activate.isStopped;\n  }\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    _defineProperty(this, \"toastId\", void 0);\n    _defineProperty(this, \"config\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    _defineProperty(this, \"title\", void 0);\n    _defineProperty(this, \"toastType\", void 0);\n    _defineProperty(this, \"toastRef\", void 0);\n    _defineProperty(this, \"_onTap\", new Subject());\n    _defineProperty(this, \"_onAction\", new Subject());\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n  onAction() {\n    return this._onAction.asObservable();\n  }\n}\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing'\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    _defineProperty(this, \"_hostDomElement\", void 0);\n    _defineProperty(this, \"_componentFactoryResolver\", void 0);\n    _defineProperty(this, \"_appRef\", void 0);\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n  constructor() {\n    _defineProperty(this, \"_document\", inject(DOCUMENT));\n    _defineProperty(this, \"_containerElement\", void 0);\n  }\n  ngOnDestroy() {\n    if (this._containerElement && this._containerElement.parentNode) {\n      this._containerElement.parentNode.removeChild(this._containerElement);\n    }\n  }\n  /**\n   * This method returns the overlay container element. It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement() {\n    if (!this._containerElement) {\n      this._createContainer();\n    }\n    return this._containerElement;\n  }\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body\n   * and 'aria-live=\"polite\"'\n   */\n  _createContainer() {\n    const container = this._document.createElement('div');\n    container.classList.add('overlay-container');\n    container.setAttribute('aria-live', 'polite');\n    this._document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n_defineProperty(OverlayContainer, \"\\u0275fac\", function OverlayContainer_Factory(t) {\n  return new (t || OverlayContainer)();\n});\n_defineProperty(OverlayContainer, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OverlayContainer,\n  factory: OverlayContainer.ɵfac,\n  providedIn: 'root'\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OverlayContainer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  constructor(_portalHost) {\n    _defineProperty(this, \"_portalHost\", void 0);\n    this._portalHost = _portalHost;\n  }\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n  constructor() {\n    _defineProperty(this, \"_overlayContainer\", inject(OverlayContainer));\n    _defineProperty(this, \"_componentFactoryResolver\", inject(ComponentFactoryResolver));\n    _defineProperty(this, \"_appRef\", inject(ApplicationRef));\n    _defineProperty(this, \"_document\", inject(DOCUMENT));\n    // Namespace panes by overlay container\n    _defineProperty(this, \"_paneElements\", new Map());\n  }\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass, overlayContainer) {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n  getPaneElement(positionClass = '', overlayContainer) {\n    if (!this._paneElements.get(overlayContainer)) {\n      this._paneElements.set(overlayContainer, {});\n    }\n    if (!this._paneElements.get(overlayContainer)[positionClass]) {\n      this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements.get(overlayContainer)[positionClass];\n  }\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  _createPaneElement(positionClass, overlayContainer) {\n    const pane = this._document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  _createPortalHost(pane) {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  _createOverlayRef(pane) {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n_defineProperty(Overlay, \"\\u0275fac\", function Overlay_Factory(t) {\n  return new (t || Overlay)();\n});\n_defineProperty(Overlay, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Overlay,\n  factory: Overlay.ɵfac,\n  providedIn: 'root'\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Overlay, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ToastrService {\n  constructor(token, overlay, _injector, sanitizer, ngZone) {\n    _defineProperty(this, \"overlay\", void 0);\n    _defineProperty(this, \"_injector\", void 0);\n    _defineProperty(this, \"sanitizer\", void 0);\n    _defineProperty(this, \"ngZone\", void 0);\n    _defineProperty(this, \"toastrConfig\", void 0);\n    _defineProperty(this, \"currentlyActive\", 0);\n    _defineProperty(this, \"toasts\", []);\n    _defineProperty(this, \"overlayContainer\", void 0);\n    _defineProperty(this, \"previousToastMessage\", void 0);\n    _defineProperty(this, \"index\", 0);\n    this.overlay = overlay;\n    this._injector = _injector;\n    this.sanitizer = sanitizer;\n    this.ngZone = ngZone;\n    this.toastrConfig = {\n      ...token.default,\n      ...token.config\n    };\n    if (token.config.iconClasses) {\n      this.toastrConfig.iconClasses = {\n        ...token.default.iconClasses,\n        ...token.config.iconClasses\n      };\n    }\n  }\n  /** show toast */\n  show(message, title, override = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message, title, override = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n  /**\n   * Determines if toast message is already shown\n   */\n  findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n    const {\n      includeTitleDuplicates\n    } = this.toastrConfig;\n    for (const toast of this.toasts) {\n      const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n      if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n        toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n        return toast;\n      }\n    }\n    return null;\n  }\n  /** create a clone of global config and apply individual settings */\n  applyConfig(override = {}) {\n    return {\n      ...this.toastrConfig,\n      ...override\n    };\n  }\n  /**\n   * Find toast object by id\n   */\n  _findToast(toastId) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return {\n          index: i,\n          activeToast: this.toasts[i]\n        };\n      }\n    }\n    return null;\n  }\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  _preBuildNotification(toastType, message, title, config) {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n  /**\n   * Creates and attaches toast data to component\n   * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n   */\n  _buildNotification(toastType, message, title, config) {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n    // a timeout at all\n    const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n    if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n      return duplicate;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[0].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n    /** New injector that contains an instance of `ToastPackage`. */\n    const providers = [{\n      provide: ToastPackage,\n      useValue: toastPackage\n    }];\n    const toastInjector = Injector.create({\n      providers,\n      parent: this._injector\n    });\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, config.newestOnTop);\n    toastRef.componentInstance = portal.instance;\n    const ins = {\n      toastId: this.index,\n      title: title || '',\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal\n    };\n    if (!keepInactive) {\n      this.currentlyActive = this.currentlyActive + 1;\n      setTimeout(() => {\n        ins.toastRef.activate();\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n_defineProperty(ToastrService, \"\\u0275fac\", function ToastrService_Factory(t) {\n  return new (t || ToastrService)(i0.ɵɵinject(TOAST_CONFIG), i0.ɵɵinject(Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i0.NgZone));\n});\n_defineProperty(ToastrService, \"\\u0275prov\", /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ToastrService,\n  factory: ToastrService.ɵfac,\n  providedIn: 'root'\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [TOAST_CONFIG]\n      }]\n    }, {\n      type: Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i2.DomSanitizer\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nclass Toast {\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state.value === 'inactive') {\n      return 'none';\n    }\n    return;\n  }\n  constructor(toastrService, toastPackage, ngZone) {\n    _defineProperty(this, \"toastrService\", void 0);\n    _defineProperty(this, \"toastPackage\", void 0);\n    _defineProperty(this, \"ngZone\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    _defineProperty(this, \"title\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"duplicatesCount\", void 0);\n    _defineProperty(this, \"originalTimeout\", void 0);\n    /** width of progress bar */\n    _defineProperty(this, \"width\", -1);\n    /** a combination of toast type and options.toastClass */\n    _defineProperty(this, \"toastClasses\", '');\n    /** controls animation */\n    _defineProperty(this, \"state\", void 0);\n    _defineProperty(this, \"timeout\", void 0);\n    _defineProperty(this, \"intervalId\", void 0);\n    _defineProperty(this, \"hideTime\", void 0);\n    _defineProperty(this, \"sub\", void 0);\n    _defineProperty(this, \"sub1\", void 0);\n    _defineProperty(this, \"sub2\", void 0);\n    _defineProperty(this, \"sub3\", void 0);\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.ngZone = ngZone;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n    this.state = {\n      value: 'inactive',\n      params: {\n        easeTime: this.toastPackage.config.easeTime,\n        easing: 'ease-in'\n      }\n    };\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = {\n      ...this.state,\n      value: 'active'\n    };\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = {\n      ...this.state,\n      value: 'active'\n    };\n    this.outsideTimeout(() => this.remove(), this.originalTimeout);\n    this.options.timeOut = this.originalTimeout;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = {\n      ...this.state,\n      value: 'removed'\n    };\n    this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n  }\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    if (this.options.disableTimeOut !== 'extendedTimeOut') {\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0;\n      // disable progressBar\n      clearInterval(this.intervalId);\n      this.width = 0;\n    }\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state.value === 'removed') {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n  outsideTimeout(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n  outsideInterval(func, timeout) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n  runInsideAngular(func) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n}\n_defineProperty(Toast, \"\\u0275fac\", function Toast_Factory(t) {\n  return new (t || Toast)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.NgZone));\n});\n_defineProperty(Toast, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Toast,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 5,\n  hostBindings: function Toast_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx.state);\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n  template: function Toast_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, Toast_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, Toast_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, Toast_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  dependencies: [NgIf],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('flyInOut', [state('inactive', style({\n      opacity: 0\n    })), state('active', style({\n      opacity: 1\n    })), state('removed', style({\n      opacity: 0\n    })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n  }\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n      animations: [trigger('flyInOut', [state('inactive', style({\n        opacity: 0\n      })), state('active', style({\n        opacity: 1\n      })), state('removed', style({\n        opacity: 0\n      })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])],\n      preserveWhitespaces: false,\n      standalone: true,\n      imports: [NgIf]\n    }]\n  }], function () {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    state: [{\n      type: HostBinding,\n      args: ['@flyInOut']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nconst DefaultGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n  const providers = [{\n    provide: TOAST_CONFIG,\n    useValue: {\n      default: DefaultGlobalConfig,\n      config\n    }\n  }];\n  return makeEnvironmentProviders(providers);\n};\nclass ToastrModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [provideToastr(config)]\n    };\n  }\n}\n_defineProperty(ToastrModule, \"\\u0275fac\", function ToastrModule_Factory(t) {\n  return new (t || ToastrModule)();\n});\n_defineProperty(ToastrModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastrModule\n}));\n_defineProperty(ToastrModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Toast],\n      exports: [Toast]\n    }]\n  }], null, null);\n})();\nclass ToastrComponentlessModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastrModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoComponentGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n}\n_defineProperty(ToastrComponentlessModule, \"\\u0275fac\", function ToastrComponentlessModule_Factory(t) {\n  return new (t || ToastrComponentlessModule)();\n});\n_defineProperty(ToastrComponentlessModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastrComponentlessModule\n}));\n_defineProperty(ToastrComponentlessModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastrComponentlessModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\nclass ToastNoAnimation {\n  /** hides component when waiting to be displayed */\n  get displayStyle() {\n    if (this.state === 'inactive') {\n      return 'none';\n    }\n  }\n  /** controls animation */\n\n  constructor(toastrService, toastPackage, appRef) {\n    _defineProperty(this, \"toastrService\", void 0);\n    _defineProperty(this, \"toastPackage\", void 0);\n    _defineProperty(this, \"appRef\", void 0);\n    _defineProperty(this, \"message\", void 0);\n    _defineProperty(this, \"title\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"duplicatesCount\", void 0);\n    _defineProperty(this, \"originalTimeout\", void 0);\n    /** width of progress bar */\n    _defineProperty(this, \"width\", -1);\n    /** a combination of toast type and options.toastClass */\n    _defineProperty(this, \"toastClasses\", '');\n    _defineProperty(this, \"state\", 'inactive');\n    _defineProperty(this, \"timeout\", void 0);\n    _defineProperty(this, \"intervalId\", void 0);\n    _defineProperty(this, \"hideTime\", void 0);\n    _defineProperty(this, \"sub\", void 0);\n    _defineProperty(this, \"sub1\", void 0);\n    _defineProperty(this, \"sub2\", void 0);\n    _defineProperty(this, \"sub3\", void 0);\n    this.toastrService = toastrService;\n    this.toastPackage = toastPackage;\n    this.appRef = appRef;\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.originalTimeout = toastPackage.config.timeOut;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n    this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n      this.resetTimeout();\n    });\n    this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n      this.duplicatesCount = count;\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    this.sub2.unsubscribe();\n    this.sub3.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = remaining / this.options.timeOut * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n  resetTimeout() {\n    clearTimeout(this.timeout);\n    clearInterval(this.intervalId);\n    this.state = 'active';\n    this.options.timeOut = this.originalTimeout;\n    this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n    this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n  }\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  delayedHideToast() {\n    if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n_defineProperty(ToastNoAnimation, \"\\u0275fac\", function ToastNoAnimation_Factory(t) {\n  return new (t || ToastNoAnimation)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n});\n_defineProperty(ToastNoAnimation, \"\\u0275cmp\", /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToastNoAnimation,\n  selectors: [[\"\", \"toast-component\", \"\"]],\n  hostVars: 4,\n  hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n        return ctx.tapToast();\n      })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n        return ctx.stickAround();\n      })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n        return ctx.delayedHideToast();\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.toastClasses);\n      i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n    }\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  attrs: _c0,\n  decls: 5,\n  vars: 5,\n  consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n  template: function ToastNoAnimation_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0);\n      i0.ɵɵtemplate(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1);\n      i0.ɵɵtemplate(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2);\n      i0.ɵɵtemplate(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3);\n      i0.ɵɵtemplate(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n    }\n  },\n  dependencies: [NgIf],\n  encapsulation: 2\n}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastNoAnimation, [{\n    type: Component,\n    args: [{\n      selector: '[toast-component]',\n      template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n      standalone: true,\n      imports: [NgIf]\n    }]\n  }], function () {\n    return [{\n      type: ToastrService\n    }, {\n      type: ToastPackage\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    toastClasses: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    displayStyle: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    tapToast: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    stickAround: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    delayedHideToast: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }]\n  });\n})();\nconst DefaultNoAnimationsGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: ToastNoAnimation\n};\nclass ToastNoAnimationModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: ToastNoAnimationModule,\n      providers: [{\n        provide: TOAST_CONFIG,\n        useValue: {\n          default: DefaultNoAnimationsGlobalConfig,\n          config\n        }\n      }]\n    };\n  }\n}\n_defineProperty(ToastNoAnimationModule, \"\\u0275fac\", function ToastNoAnimationModule_Factory(t) {\n  return new (t || ToastNoAnimationModule)();\n});\n_defineProperty(ToastNoAnimationModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastNoAnimationModule\n}));\n_defineProperty(ToastNoAnimationModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({}));\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastNoAnimationModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ToastNoAnimation],\n      exports: [ToastNoAnimation]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };","map":{"version":3,"names":["i0","Directive","InjectionToken","inject","Injectable","ComponentFactoryResolver","ApplicationRef","SecurityContext","Injector","Inject","Component","HostBinding","HostListener","makeEnvironmentProviders","NgModule","trigger","state","style","transition","animate","DOCUMENT","NgIf","Subject","i2","_c0","Toast_button_0_Template","rf","ctx","_r6","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Toast_button_0_Template_button_click_0_listener","ɵɵrestoreView","ctx_r5","ɵɵnextContext","ɵɵresetView","remove","ɵɵtext","ɵɵelementEnd","Toast_div_1_ng_container_2_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r7","ɵɵadvance","ɵɵtextInterpolate1","duplicatesCount","Toast_div_1_Template","ɵɵtemplate","ctx_r1","ɵɵclassMap","options","titleClass","ɵɵattribute","title","ɵɵproperty","Toast_div_2_Template","ɵɵelement","ctx_r2","messageClass","message","ɵɵsanitizeHtml","Toast_div_3_Template","ctx_r3","Toast_div_4_Template","ctx_r4","ɵɵstyleProp","width","ToastNoAnimation_button_0_Template","ToastNoAnimation_button_0_Template_button_click_0_listener","ToastNoAnimation_div_1_ng_container_2_Template","ToastNoAnimation_div_1_Template","ToastNoAnimation_div_2_Template","ToastNoAnimation_div_3_Template","ToastNoAnimation_div_4_Template","ToastContainerDirective","constructor","el","_defineProperty","getContainerElement","nativeElement","ToastContainerDirective_Factory","t","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","type","selectors","exportAs","standalone","ngDevMode","ɵsetClassMetadata","args","selector","ComponentPortal","component","injector","attach","host","newestOnTop","_attachedHost","detach","undefined","isAttached","setAttachedHost","BasePortalHost","portal","_attachedPortal","attachComponentPortal","_disposeFn","setDisposeFn","fn","ToastRef","_overlayRef","manualClose","_manualClose","next","complete","manualClosed","asObservable","timeoutReset","_resetTimeout","countDuplicate","_countDuplicate","close","_afterClosed","_activate","afterClosed","isInactive","isStopped","activate","afterActivate","onDuplicate","resetTimeout","ToastPackage","toastId","config","toastType","toastRef","subscribe","_onAction","_onTap","triggerTap","tapToDismiss","onTap","triggerAction","action","onAction","DefaultNoComponentGlobalConfig","maxOpened","autoDismiss","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","includeTitleDuplicates","iconClasses","error","info","success","warning","closeButton","disableTimeOut","timeOut","extendedTimeOut","enableHtml","progressBar","toastClass","positionClass","easing","easeTime","onActivateTick","progressAnimation","TOAST_CONFIG","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","resolveComponentFactory","componentRef","create","attachView","hostView","detachView","destroy","insertBefore","_getComponentRootNode","firstChild","appendChild","rootNodes","OverlayContainer","ngOnDestroy","_containerElement","parentNode","removeChild","_createContainer","container","_document","createElement","classList","add","setAttribute","body","OverlayContainer_Factory","ɵɵdefineInjectable","token","factory","ɵfac","providedIn","OverlayRef","_portalHost","Overlay","Map","overlayContainer","_createOverlayRef","getPaneElement","_paneElements","get","set","_createPaneElement","pane","id","_overlayContainer","_createPortalHost","Overlay_Factory","ToastrService","overlay","_injector","sanitizer","ngZone","toastrConfig","default","show","override","_preBuildNotification","applyConfig","clear","toast","toasts","found","_findToast","activeToast","splice","index","currentlyActive","length","p","findDuplicate","resetOnDuplicate","hasDuplicateTitle","i","run","_buildNotification","toastComponent","Error","duplicate","previousToastMessage","keepInactive","overlayRef","sanitizedMessage","sanitize","HTML","toastPackage","providers","provide","useValue","toastInjector","parent","componentInstance","instance","ins","onShown","onHidden","setTimeout","push","ToastrService_Factory","ɵɵinject","DomSanitizer","NgZone","decorators","Toast","displayStyle","value","toastrService","originalTimeout","toastClasses","sub","activateToast","sub1","sub2","sub3","count","params","unsubscribe","clearInterval","intervalId","clearTimeout","timeout","outsideTimeout","hideTime","Date","getTime","outsideInterval","updateProgress","now","remaining","tapToast","stickAround","delayedHideToast","func","runOutsideAngular","runInsideAngular","setInterval","Toast_Factory","ɵɵdefineComponent","hostVars","hostBindings","Toast_HostBindings","Toast_click_HostBindingHandler","Toast_mouseenter_HostBindingHandler","Toast_mouseleave_HostBindingHandler","ɵɵsyntheticHostProperty","features","ɵɵStandaloneFeature","attrs","decls","vars","consts","template","Toast_Template","dependencies","encapsulation","data","animation","opacity","animations","preserveWhitespaces","imports","DefaultGlobalConfig","provideToastr","ToastrModule","forRoot","ngModule","ToastrModule_Factory","ɵɵdefineNgModule","ɵɵdefineInjector","exports","ToastrComponentlessModule","ToastrComponentlessModule_Factory","ToastNoAnimation","appRef","tick","ToastNoAnimation_Factory","ToastNoAnimation_HostBindings","ToastNoAnimation_click_HostBindingHandler","ToastNoAnimation_mouseenter_HostBindingHandler","ToastNoAnimation_mouseleave_HostBindingHandler","ToastNoAnimation_Template","DefaultNoAnimationsGlobalConfig","ToastNoAnimationModule","ToastNoAnimationModule_Factory"],"sources":["D:/projects/shoe-selling-site/frontend/node_modules/ngx-toastr/fesm2022/ngx-toastr.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, Component, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\n\nclass ToastContainerDirective {\n    el;\n    constructor(el) {\n        this.el = el;\n    }\n    getContainerElement() {\n        return this.el.nativeElement;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastContainerDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.1\", type: ToastContainerDirective, isStandalone: true, selector: \"[toastContainer]\", exportAs: [\"toastContainer\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastContainerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[toastContainer]',\n                    exportAs: 'toastContainer',\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n    _attachedHost;\n    /** The type of the component that will be instantiated for attachment. */\n    component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalHost.\n     * The origin necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef;\n    /** Injector used for the instantiation of the component. */\n    injector;\n    constructor(component, injector) {\n        this.component = component;\n        this.injector = injector;\n    }\n    /** Attach this portal to a host. */\n    attach(host, newestOnTop) {\n        this._attachedHost = host;\n        return host.attach(this, newestOnTop);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        const host = this._attachedHost;\n        if (host) {\n            this._attachedHost = undefined;\n            return host.detach();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n    /** The portal currently attached to the host. */\n    _attachedPortal;\n    /** A function that will permanently dispose this host. */\n    _disposeFn;\n    attach(portal, newestOnTop) {\n        this._attachedPortal = portal;\n        return this.attachComponentPortal(portal, newestOnTop);\n    }\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost();\n        }\n        this._attachedPortal = undefined;\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = undefined;\n        }\n    }\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n    _overlayRef;\n    /** The instance of component opened into the toast. */\n    componentInstance;\n    /** Count of duplicates of this toast */\n    duplicatesCount = 0;\n    /** Subject for notifying the user that the toast has finished closing. */\n    _afterClosed = new Subject();\n    /** triggered when toast is activated */\n    _activate = new Subject();\n    /** notifies the toast that it should close before the timeout */\n    _manualClose = new Subject();\n    /** notifies the toast that it should reset the timeouts */\n    _resetTimeout = new Subject();\n    /** notifies the toast that it should count a duplicate toast */\n    _countDuplicate = new Subject();\n    constructor(_overlayRef) {\n        this._overlayRef = _overlayRef;\n    }\n    manualClose() {\n        this._manualClose.next();\n        this._manualClose.complete();\n    }\n    manualClosed() {\n        return this._manualClose.asObservable();\n    }\n    timeoutReset() {\n        return this._resetTimeout.asObservable();\n    }\n    countDuplicate() {\n        return this._countDuplicate.asObservable();\n    }\n    /**\n     * Close the toast.\n     */\n    close() {\n        this._overlayRef.detach();\n        this._afterClosed.next();\n        this._manualClose.next();\n        this._afterClosed.complete();\n        this._manualClose.complete();\n        this._activate.complete();\n        this._resetTimeout.complete();\n        this._countDuplicate.complete();\n    }\n    /** Gets an observable that is notified when the toast is finished closing. */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    isInactive() {\n        return this._activate.isStopped;\n    }\n    activate() {\n        this._activate.next();\n        this._activate.complete();\n    }\n    /** Gets an observable that is notified when the toast has started opening. */\n    afterActivate() {\n        return this._activate.asObservable();\n    }\n    /** Reset the toast timouts and count duplicates */\n    onDuplicate(resetTimeout, countDuplicate) {\n        if (resetTimeout) {\n            this._resetTimeout.next();\n        }\n        if (countDuplicate) {\n            this._countDuplicate.next(++this.duplicatesCount);\n        }\n    }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n    toastId;\n    config;\n    message;\n    title;\n    toastType;\n    toastRef;\n    _onTap = new Subject();\n    _onAction = new Subject();\n    constructor(toastId, config, message, title, toastType, toastRef) {\n        this.toastId = toastId;\n        this.config = config;\n        this.message = message;\n        this.title = title;\n        this.toastType = toastType;\n        this.toastRef = toastRef;\n        this.toastRef.afterClosed().subscribe(() => {\n            this._onAction.complete();\n            this._onTap.complete();\n        });\n    }\n    /** Fired on click */\n    triggerTap() {\n        this._onTap.next();\n        if (this.config.tapToDismiss) {\n            this._onTap.complete();\n        }\n    }\n    onTap() {\n        return this._onTap.asObservable();\n    }\n    /** available for use in custom toast */\n    triggerAction(action) {\n        this._onAction.next(action);\n    }\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nconst DefaultNoComponentGlobalConfig = {\n    maxOpened: 0,\n    autoDismiss: false,\n    newestOnTop: true,\n    preventDuplicates: false,\n    countDuplicates: false,\n    resetTimeoutOnDuplicate: false,\n    includeTitleDuplicates: false,\n    iconClasses: {\n        error: 'toast-error',\n        info: 'toast-info',\n        success: 'toast-success',\n        warning: 'toast-warning',\n    },\n    // Individual\n    closeButton: false,\n    disableTimeOut: false,\n    timeOut: 5000,\n    extendedTimeOut: 1000,\n    enableHtml: false,\n    progressBar: false,\n    toastClass: 'ngx-toastr',\n    positionClass: 'toast-top-right',\n    titleClass: 'toast-title',\n    messageClass: 'toast-message',\n    easing: 'ease-in',\n    easeTime: 300,\n    tapToDismiss: true,\n    onActivateTick: false,\n    progressAnimation: 'decreasing',\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n    _hostDomElement;\n    _componentFactoryResolver;\n    _appRef;\n    constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n        super();\n        this._hostDomElement = _hostDomElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     */\n    attachComponentPortal(portal, newestOnTop) {\n        const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the ChangeDetector for that component to the application (which\n        // happens automatically when using a ViewContainer).\n        componentRef = componentFactory.create(portal.injector);\n        // When creating a component outside of a ViewContainer, we need to manually register\n        // its ChangeDetector with the application. This API is unfortunately not yet published\n        // in Angular core. The change detector must also be deregistered when the component\n        // is destroyed to prevent memory leaks.\n        this._appRef.attachView(componentRef.hostView);\n        this.setDisposeFn(() => {\n            this._appRef.detachView(componentRef.hostView);\n            componentRef.destroy();\n        });\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        if (newestOnTop) {\n            this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n        }\n        else {\n            this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        }\n        return componentRef;\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n\n/** Container inside which all toasts will render. */\nclass OverlayContainer {\n    _document = inject(DOCUMENT);\n    _containerElement;\n    ngOnDestroy() {\n        if (this._containerElement && this._containerElement.parentNode) {\n            this._containerElement.parentNode.removeChild(this._containerElement);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body\n     * and 'aria-live=\"polite\"'\n     */\n    _createContainer() {\n        const container = this._document.createElement('div');\n        container.classList.add('overlay-container');\n        container.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: OverlayContainer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    _portalHost;\n    constructor(_portalHost) {\n        this._portalHost = _portalHost;\n    }\n    attach(portal, newestOnTop = true) {\n        return this._portalHost.attach(portal, newestOnTop);\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns Resolves when the overlay has been detached.\n     */\n    detach() {\n        return this._portalHost.detach();\n    }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    _overlayContainer = inject(OverlayContainer);\n    _componentFactoryResolver = inject(ComponentFactoryResolver);\n    _appRef = inject(ApplicationRef);\n    _document = inject(DOCUMENT);\n    // Namespace panes by overlay container\n    _paneElements = new Map();\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n        // get existing pane if possible\n        return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n        if (!this._paneElements.get(overlayContainer)) {\n            this._paneElements.set(overlayContainer, {});\n        }\n        if (!this._paneElements.get(overlayContainer)[positionClass]) {\n            this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n        }\n        return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n        const pane = this._document.createElement('div');\n        pane.id = 'toast-container';\n        pane.classList.add(positionClass);\n        pane.classList.add('toast-container');\n        if (!overlayContainer) {\n            this._overlayContainer.getContainerElement().appendChild(pane);\n        }\n        else {\n            overlayContainer.getContainerElement().appendChild(pane);\n        }\n        return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n        return new OverlayRef(this._createPortalHost(pane));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: Overlay, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: Overlay, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass ToastrService {\n    overlay;\n    _injector;\n    sanitizer;\n    ngZone;\n    toastrConfig;\n    currentlyActive = 0;\n    toasts = [];\n    overlayContainer;\n    previousToastMessage;\n    index = 0;\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n        this.overlay = overlay;\n        this._injector = _injector;\n        this.sanitizer = sanitizer;\n        this.ngZone = ngZone;\n        this.toastrConfig = {\n            ...token.default,\n            ...token.config,\n        };\n        if (token.config.iconClasses) {\n            this.toastrConfig.iconClasses = {\n                ...token.default.iconClasses,\n                ...token.config.iconClasses,\n            };\n        }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.success || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.error || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.info || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n        const type = this.toastrConfig.iconClasses.warning || '';\n        return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n        // Call every toastRef manualClose function\n        for (const toast of this.toasts) {\n            if (toastId !== undefined) {\n                if (toast.toastId === toastId) {\n                    toast.toastRef.manualClose();\n                    return;\n                }\n            }\n            else {\n                toast.toastRef.manualClose();\n            }\n        }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n        const found = this._findToast(toastId);\n        if (!found) {\n            return false;\n        }\n        found.activeToast.toastRef.close();\n        this.toasts.splice(found.index, 1);\n        this.currentlyActive = this.currentlyActive - 1;\n        if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n            return false;\n        }\n        if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n            const p = this.toasts[this.currentlyActive].toastRef;\n            if (!p.isInactive()) {\n                this.currentlyActive = this.currentlyActive + 1;\n                p.activate();\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n        const { includeTitleDuplicates } = this.toastrConfig;\n        for (const toast of this.toasts) {\n            const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n            if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n                toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n                return toast;\n            }\n        }\n        return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n        return { ...this.toastrConfig, ...override };\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n        for (let i = 0; i < this.toasts.length; i++) {\n            if (this.toasts[i].toastId === toastId) {\n                return { index: i, activeToast: this.toasts[i] };\n            }\n        }\n        return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n        if (config.onActivateTick) {\n            return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n        }\n        return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n        if (!config.toastComponent) {\n            throw new Error('toastComponent required');\n        }\n        // max opened and auto dismiss = true\n        // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n        // a timeout at all\n        const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n        if (((this.toastrConfig.includeTitleDuplicates && title) || message) &&\n            this.toastrConfig.preventDuplicates &&\n            duplicate !== null) {\n            return duplicate;\n        }\n        this.previousToastMessage = message;\n        let keepInactive = false;\n        if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n            keepInactive = true;\n            if (this.toastrConfig.autoDismiss) {\n                this.clear(this.toasts[0].toastId);\n            }\n        }\n        const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n        this.index = this.index + 1;\n        let sanitizedMessage = message;\n        if (message && config.enableHtml) {\n            sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n        }\n        const toastRef = new ToastRef(overlayRef);\n        const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n        /** New injector that contains an instance of `ToastPackage`. */\n        const providers = [{ provide: ToastPackage, useValue: toastPackage }];\n        const toastInjector = Injector.create({ providers, parent: this._injector });\n        const component = new ComponentPortal(config.toastComponent, toastInjector);\n        const portal = overlayRef.attach(component, config.newestOnTop);\n        toastRef.componentInstance = portal.instance;\n        const ins = {\n            toastId: this.index,\n            title: title || '',\n            message: message || '',\n            toastRef,\n            onShown: toastRef.afterActivate(),\n            onHidden: toastRef.afterClosed(),\n            onTap: toastPackage.onTap(),\n            onAction: toastPackage.onAction(),\n            portal,\n        };\n        if (!keepInactive) {\n            this.currentlyActive = this.currentlyActive + 1;\n            setTimeout(() => {\n                ins.toastRef.activate();\n            });\n        }\n        this.toasts.push(ins);\n        return ins;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrService, deps: [{ token: TOAST_CONFIG }, { token: Overlay }, { token: i0.Injector }, { token: i2.DomSanitizer }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [TOAST_CONFIG]\n                }] }, { type: Overlay }, { type: i0.Injector }, { type: i2.DomSanitizer }, { type: i0.NgZone }]; } });\n\nclass Toast {\n    toastrService;\n    toastPackage;\n    ngZone;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = -1;\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    /** controls animation */\n    state;\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state.value === 'inactive') {\n            return 'none';\n        }\n        return;\n    }\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, ngZone) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.ngZone = ngZone;\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n        this.state = {\n            value: 'inactive',\n            params: {\n                easeTime: this.toastPackage.config.easeTime,\n                easing: 'ease-in',\n            },\n        };\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = { ...this.state, value: 'active' };\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') &&\n            this.options.timeOut) {\n            this.outsideTimeout(() => this.remove(), this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.outsideInterval(() => this.updateProgress(), 10);\n            }\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = { ...this.state, value: 'active' };\n        this.outsideTimeout(() => this.remove(), this.originalTimeout);\n        this.options.timeOut = this.originalTimeout;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = { ...this.state, value: 'removed' };\n        this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state.value === 'removed') {\n            return;\n        }\n        if (this.options.disableTimeOut !== 'extendedTimeOut') {\n            clearTimeout(this.timeout);\n            this.options.timeOut = 0;\n            this.hideTime = 0;\n            // disable progressBar\n            clearInterval(this.intervalId);\n            this.width = 0;\n        }\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state.value === 'removed') {\n            return;\n        }\n        this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.outsideInterval(() => this.updateProgress(), 10);\n        }\n    }\n    outsideTimeout(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.timeout = setTimeout(() => func(), timeout);\n        }\n    }\n    outsideInterval(func, timeout) {\n        if (this.ngZone) {\n            this.ngZone.runOutsideAngular(() => (this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)));\n        }\n        else {\n            this.intervalId = setInterval(() => func(), timeout);\n        }\n    }\n    runInsideAngular(func) {\n        if (this.ngZone) {\n            this.ngZone.run(() => func());\n        }\n        else {\n            func();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: Toast, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: Toast, isStandalone: true, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"@flyInOut\": \"this.state\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            trigger('flyInOut', [\n                state('inactive', style({ opacity: 0 })),\n                state('active', style({ opacity: 1 })),\n                state('removed', style({ opacity: 0 })),\n                transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                transition('active => removed', animate('{{ easeTime }}ms {{ easing }}')),\n            ]),\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: Toast, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                    animations: [\n                        trigger('flyInOut', [\n                            state('inactive', style({ opacity: 0 })),\n                            state('active', style({ opacity: 1 })),\n                            state('removed', style({ opacity: 0 })),\n                            transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')),\n                            transition('active => removed', animate('{{ easeTime }}ms {{ easing }}')),\n                        ]),\n                    ],\n                    preserveWhitespaces: false,\n                    standalone: true,\n                    imports: [NgIf],\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.NgZone }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], state: [{\n                type: HostBinding,\n                args: ['@flyInOut']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\n\nconst DefaultGlobalConfig = {\n    ...DefaultNoComponentGlobalConfig,\n    toastComponent: Toast,\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n    const providers = [\n        {\n            provide: TOAST_CONFIG,\n            useValue: {\n                default: DefaultGlobalConfig,\n                config,\n            }\n        }\n    ];\n    return makeEnvironmentProviders(providers);\n};\n\nclass ToastrModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [provideToastr(config)],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrModule, imports: [Toast], exports: [Toast] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Toast],\n                    exports: [Toast],\n                }]\n        }] });\nclass ToastrComponentlessModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastrModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoComponentGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrComponentlessModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrComponentlessModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrComponentlessModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastrComponentlessModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nclass ToastNoAnimation {\n    toastrService;\n    toastPackage;\n    appRef;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = -1;\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n        if (this.state === 'inactive') {\n            return 'none';\n        }\n    }\n    /** controls animation */\n    state = 'inactive';\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, appRef) {\n        this.toastrService = toastrService;\n        this.toastPackage = toastPackage;\n        this.appRef = appRef;\n        this.message = toastPackage.message;\n        this.title = toastPackage.title;\n        this.options = toastPackage.config;\n        this.originalTimeout = toastPackage.config.timeOut;\n        this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n        this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n            this.activateToast();\n        });\n        this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n            this.remove();\n        });\n        this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n            this.resetTimeout();\n        });\n        this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n            this.duplicatesCount = count;\n        });\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n        this.sub1.unsubscribe();\n        this.sub2.unsubscribe();\n        this.sub3.unsubscribe();\n        clearInterval(this.intervalId);\n        clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n        this.state = 'active';\n        if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n            this.timeout = setTimeout(() => {\n                this.remove();\n            }, this.options.timeOut);\n            this.hideTime = new Date().getTime() + this.options.timeOut;\n            if (this.options.progressBar) {\n                this.intervalId = setInterval(() => this.updateProgress(), 10);\n            }\n        }\n        if (this.options.onActivateTick) {\n            this.appRef.tick();\n        }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n        if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n            return;\n        }\n        const now = new Date().getTime();\n        const remaining = this.hideTime - now;\n        this.width = (remaining / this.options.timeOut) * 100;\n        if (this.options.progressAnimation === 'increasing') {\n            this.width = 100 - this.width;\n        }\n        if (this.width <= 0) {\n            this.width = 0;\n        }\n        if (this.width >= 100) {\n            this.width = 100;\n        }\n    }\n    resetTimeout() {\n        clearTimeout(this.timeout);\n        clearInterval(this.intervalId);\n        this.state = 'active';\n        this.options.timeOut = this.originalTimeout;\n        this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n        this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.state = 'removed';\n        this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n        if (this.state === 'removed') {\n            return;\n        }\n        this.toastPackage.triggerTap();\n        if (this.options.tapToDismiss) {\n            this.remove();\n        }\n    }\n    stickAround() {\n        if (this.state === 'removed') {\n            return;\n        }\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width = 0;\n    }\n    delayedHideToast() {\n        if ((this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut') ||\n            this.options.extendedTimeOut === 0 ||\n            this.state === 'removed') {\n            return;\n        }\n        this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n        this.options.timeOut = this.options.extendedTimeOut;\n        this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n        this.width = -1;\n        if (this.options.progressBar) {\n            this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimation, deps: [{ token: ToastrService }, { token: ToastPackage }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.1\", type: ToastNoAnimation, isStandalone: true, selector: \"[toast-component]\", host: { listeners: { \"click\": \"tapToast()\", \"mouseenter\": \"stickAround()\", \"mouseleave\": \"delayedHideToast()\" }, properties: { \"class\": \"this.toastClasses\", \"style.display\": \"this.displayStyle\" } }, ngImport: i0, template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimation, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[toast-component]',\n                    template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" type=\"button\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n                    standalone: true,\n                    imports: [NgIf]\n                }]\n        }], ctorParameters: function () { return [{ type: ToastrService }, { type: ToastPackage }, { type: i0.ApplicationRef }]; }, propDecorators: { toastClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }], displayStyle: [{\n                type: HostBinding,\n                args: ['style.display']\n            }], tapToast: [{\n                type: HostListener,\n                args: ['click']\n            }], stickAround: [{\n                type: HostListener,\n                args: ['mouseenter']\n            }], delayedHideToast: [{\n                type: HostListener,\n                args: ['mouseleave']\n            }] } });\nconst DefaultNoAnimationsGlobalConfig = {\n    ...DefaultNoComponentGlobalConfig,\n    toastComponent: ToastNoAnimation,\n};\nclass ToastNoAnimationModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: ToastNoAnimationModule,\n            providers: [\n                {\n                    provide: TOAST_CONFIG,\n                    useValue: {\n                        default: DefaultNoAnimationsGlobalConfig,\n                        config,\n                    },\n                },\n            ],\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimationModule, imports: [ToastNoAnimation], exports: [ToastNoAnimation] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimationModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.1\", ngImport: i0, type: ToastNoAnimationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ToastNoAnimation],\n                    exports: [ToastNoAnimation],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}